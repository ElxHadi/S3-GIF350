@startuml menuFact

skinparam class {
    BackgroundColor<<MVC>> LightBlue
    BackgroundColor<<Factory>> LightGreen
    BorderColor black
    ArrowColor black
    ClassFontColor black
}

' // Controller Class (MVC)
class MenuFactController <<MVC>> {
    - Menu menu
    - Bill bill
    - MenuFactView view
    + MenuFactController(Menu, Bill, MenuFactView)
    + displayWelcomeMessage()
    + displayMenu()
    + displayBill()
    + run()
}

' // View Class (MVC)
class MenuFactView <<MVC>> {
    + displayMenu(Menu)
    + displayBill(Bill)
    + showWelcomeMessage()
}

' // Models
class Menu {
    - String description
    - List<IPlat> plats
    + addPlat(IPlat plat)
    + removePlat(IPlat plat)
    + getPlatByCode(int code): IPlat
}

class Bill {
    - LocalDateTime date
    - BillState state
    - Client client
    - Map<IPlat, Integer> plats
    + addPlat(IPlat, int)
    + removePlat(int)
    + modifyBill(int, int)
    + getTotal(): double
}

interface IPlat {
    + getCode(): int
    + getDescription(): String
    + getPrix(): double
}

class Plat {
    - int code
    - String description
    - double prix
    + getCode(): int
    + getDescription(): String
    + getPrix(): double
}

class KidsPlat {
    - double proportion
    + KidsPlat(int, String, double, double)
}

class HealthyPlat {
    - double calories
    - double cholesterol
    - double fat
    + HealthyPlat(int, String, double, double, double, double)
}

class Client {
    - int idClient
    - String name
    + Client(int, String)
}

enum BillState {
    OPEN
    CLOSED
    PAYED
}

' // Factory Pattern (Factory)
class PlatFactory <<Factory>> {
    + createPlat(PlatType, int, String, double, double...): Plat
}

enum PlatType {
    REGULAR
    KIDS
    HEALTHY
}

' Associations and cardinalities
MenuFactController "1" -- "1" MenuFactView : "control"
MenuFactView "1" -- "*" Menu : "display"
MenuFactView "1" -- "*" Bill : "display"
Menu "1" o-- "0..*" IPlat
Plat ..> IPlat: "implement"
Bill "1" o-- "0..*" IPlat
Bill "1" o-- "1" Client
PlatFactory "1" --> "1" Plat : "create"
KidsPlat --|> Plat
HealthyPlat --|> Plat
Bill -- BillState : "has"
Plat -- PlatType : "has"
@enduml
