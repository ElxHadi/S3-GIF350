@startuml menuFact

skinparam class {
    BackgroundColor<<MVC>> LightBlue
    BackgroundColor<<Factory>> LightGreen
    BorderColor black
    ArrowColor black
    ClassFontColor black
}

' // Controller Class (MVC)
class MenuFactController <<MVC>> {
    - Menu menu : Menu
    - Bill bill : Bill
    - MenuFactView view : MenuFactView
    + MenuFactController(Menu, Bill, MenuFactView)
    + displayWelcomeMessage() : void
    + displayMenu() : void
    + displayBill() : void
    + run() : void
}

' // View Class (MVC)
class MenuFactView <<MVC>> {
    + displayMenu(menu : Menu) : void
    + displayBill(bill : Bill) : void
    + showWelcomeMessage() : void
}

' // Models
class Menu {
    - String description : String
    - List<Plat> plats : List<Plat>
    + addPlat(plat : Plat) : void
    + removePlat(plat : Plat) : void
    + getPlatByCode(code : int) : Plat
}

class Bill {
    - LocalDateTime date : LocalDateTime
    - BillState state : BillState
    - Client client : Client
    - Map<Plat, Integer> plats : Map<Plat, Integer>
    + addPlat(plat : Plat, quantity : int) : void
    + removePlat(index : int) : void
    + modifyBill(index : int, quantity : int) : void
    + getTotal() : double
}

class Plat {
    - int code : int
    - String description : String
    - Map<Ingredient, Double> ingredients : Map<Ingredient, Double>
    + getCode() : int
    + getDescription() : String
    + getIngredients() : Map<Ingredient, Double>
    + getPlatPrice() : double
}

class KidsPlat {
    - double proportion : double
    + KidsPlat(int, String, double, double) 
    + getPlatPrice() : double @Override
}

class HealthyPlat {
    - double calories : double
    - double cholesterol : double
    - double fat : double
    + HealthyPlat(int, String, double, double, double, double)
}

class Client {
    - int idClient : int
    - String name : String
    + Client(int, String)
}

class Ingredient {
    - int code : int
    - String name : String
    - IngredientType type : IngredientType
    - double pricePerUnit : double
    - IngredientUnit unit : IngredientUnit
}

enum IngredientType {
    SOLID
    LIQUID
}

enum IngredientUnit {
    KG
    G
    MG
    L
    ML
}

enum BillState {
    OPEN
    CLOSED
    PAYED
}

' // Factory Pattern (Factory)
class PlatFactory <<Factory>> {
    + createPlat(platType : PlatType, code : int, description : String, ...additionalParams : double...) : Plat
}

enum PlatType {
    REGULAR
    KIDS
    HEALTHY
}

' Associations and cardinalities
MenuFactController "1" -- "1" MenuFactView : "control"
MenuFactView "1" -- "*" Menu : "display"
MenuFactView "1" -- "*" Bill : "display"
Menu "1" o-- "0..*" Plat
Bill "1" o-- "0..*" Plat
Bill "1" o-- "1" Client
PlatFactory "1" --> "1" Plat : "create"
PlatFactory ..> PlatType : "uses"
KidsPlat --|> Plat
HealthyPlat --|> Plat
Bill -- BillState : "has"
Plat "1..*" o-- "0..*" Ingredient
Ingredient "1" -- IngredientType
Ingredient "1" -- IngredientUnit

@enduml
