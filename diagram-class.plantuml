@startuml

package "com.restaurant.controller" {
    class MenuFactController {
        -MenuFactView view
        -Menu menu
        -Bill bill
        +MenuFactController(Menu, Bill, MenuFactView)
        +displayWelcomeMessage()
        +displayMenu()
        +displayBill()
        +run()
    }
}

package "com.restaurant.util" {
    enum BillState {
        OPEN
        CLOSED
        PAYED
    }
    enum IngredientType {
        SOLID
        LIQUID
    }
    enum PlatType {
        REGULAR
        KIDS
        HEALTHY
    }
    enum IngredientUnit {
        KG
        G
        MG
        L
        ML
    }
}

package "com.restaurant.model" {
    class Client {
        -int idClient
        -String name
        +Client()
        +Client(int, String)
        +toString()
    }

    class Ingredient {
        -int code
        -String name
        -IngredientType type
        -double pricePerUnit
        -IngredientUnit unit
        +Ingredient()
        +Ingredient(int, String, IngredientType, double, IngredientUnit)
        +toString()
    }

    class Plat {
        -int code
        -String description
        -HashMap<Ingredient, Double> ingredients
        +Plat()
        +Plat(int, String, HashMap<Ingredient, Double>)
        +addIngredient(Ingredient, double)
        +removeIngredient(Ingredient)
        +updateIngredientQuantity(Ingredient, double)
        +getPlatPrice()
        +listIngredients()
        +toString()
    }

    class KidsPlat {
        -double proportion
        +KidsPlat(int, String, HashMap<Ingredient, Double>, double)
        +getPlatPrice()
        +toString()
    }

    class HealthyPlat {
        -double calories
        -double cholesterol
        -double fat
        +HealthyPlat(int, String, HashMap<Ingredient, Double>, double, double, double)
        +toString()
    }

    class Bill {
        -LocalDateTime date
        -BillState state
        -Client client
        -HashMap<Plat, Integer> plats
        +Bill()
        +Bill(LocalDateTime, BillState, Client, HashMap<Plat, Integer>)
        +addPlat(Plat, int)
        +removePlat(int)
        +modifyBill(int, int)
        +getTotal()
        +close()
        +pay()
        +reopen()
        +toString()
    }

    class Menu {
        -String description
        -List<Plat> plats
        +Menu()
        +Menu(String, List<Plat>)
        +removePlat(Plat)
        +addPlat(Plat)
        +getPlatByCode(int)
        +toString()
    }

    class PlatBuilder {
        -PlatType type
        -int code
        -String description
        -HashMap<Ingredient, Double> ingredients
        -double[] extraParams
        +PlatBuilder(PlatType)
        +setCode(int)
        +setDescription(String)
        +addIngredient(Ingredient, double)
        +setExtraParams(double...)
        +build()
    }

    class IngredientFactory {
        +createIngredient(int, String, IngredientType, double, IngredientUnit): Ingredient
    }
}

package "com.restaurant.view" {
    class MenuFactView {
        -String wlcMessage
        +displayMenu(Menu)
        +displayBill(Bill)
        +showWelcomeMessage()
    }
}

' Associations and cardinalities
MenuFactController "1" -- "1" MenuFactView : "controls"
MenuFactView "1" -- "*" Menu : "displays"
MenuFactView "1" -- "*" Bill : "displays"
Menu "1" o-- "0..*" Plat : "contains"
Bill "1" o-- "0..*" Plat : "contains"
Bill "1" o-- "1" Client : "belongs to"
KidsPlat --|> Plat
HealthyPlat --|> Plat
Bill -- BillState : "has"
PlatBuilder "1"--> "*"Plat : "builds"
IngredientFactory "1"--> "*" Ingredient: "makes"
Plat -- PlatType : has
Plat "1..*" o-- "0..*" Ingredient
Ingredient -- IngredientType : has
Ingredient -- IngredientUnit : has
@enduml
